<project name="app-tenant-mgmt" default="clone-tenant" basedir=".">
  <description>Manage Application layer folders and files containing per-tenant configurations</description>
  
  <!-- Location of the 'tenants' directory for this CollectionSpace source code layer. -->
  <property name="src.dir" value="${basedir}" />
  <property name="resources.dir" value="${src.dir}/tomcat-main/src/main/resources"/>
  <property name="tenants.dir" value="${resources.dir}/tenants"/>
  
  <!-- Location of the settings file for the newly-cloned tenant. -->
  <property name="settings.file.name" value="settings.xml"/>
  <property name="tenant.settings.file" value="${tenants.dir}/${tenant.shortname}/${settings.file.name}"/>
  
  <!-- Imports a set of utility routines for managing tenant folders
       from a separate Ant buildfile.
       See http://wiki.apache.org/ant/NewAntFeaturesInDetail/Import -->
  <import file="./tenant-utils-build.xml"/>
  
  <!-- This target inherits from an existing target in the imported
       utility routines buildfile, and adds its own behavior specific to this
       CollectionSpace source code layer. -->
  <target name="clone-from-template" depends="tenant-utils.clone-from-template">
    <copy file="${resources.dir}/${template.tenant.shortname}-tenant.xml"
       tofile="${resources.dir}/${tenant.shortname}-tenant.xml"/>
  </target>
  
  <!-- This target inherits from an (essentially empty) target in the imported
       utility routines buildfile, and adds its own behavior specific to this
       CollectionSpace source code layer. -->
  <target name="update-text-in-cloned-tenant"
    depends="tenant-utils.update-text-in-cloned-tenant,
    update-text-in-tenant-config,
    update-text-in-tenant-settings">
  </target>
  
  <target name="update-text-in-tenant-config">
    <!-- Update text in the tenant config file. -->
    <replace file="${resources.dir}/${tenant.shortname}-tenant.xml" token="${template.tenant.shortname}"
      value="${tenant.shortname}">
    </replace>
  </target>
  
  <target name="update-text-in-tenant-settings"
    depends="update-tenant-id-in-tenant-settings,
    update-tenant-display-name-in-tenant-settings,
    update-tenant-meta-title-in-tenant-settings,
    update-tenant-shortname-in-tenant-settings">
  </target>
  
  <target name="update-tenant-id-in-tenant-settings">
    <replaceregexp
      file="${tenant.settings.file}"
      match="&lt;tenant&gt;(.*)&lt;/tenant&gt;"
      replace="&lt;tenant&gt;${tenant.id}&lt;/tenant&gt;">
    </replaceregexp>
    <replaceregexp
      file="${tenant.settings.file}"
      match="&lt;id&gt;(.*)&lt;/id&gt;"
      replace="&lt;id&gt;${tenant.id}&lt;/id&gt;">
    </replaceregexp>
  </target>
 
  <target name="update-tenant-display-name-in-tenant-settings">
    <replaceregexp
      file="${tenant.settings.file}"
      match="&lt;display-name&gt;(.*?)${template.tenant.shortname}(.*)&lt;/display-name&gt;"
      replace="&lt;display-name&gt;\1${tenant.shortname}\2&lt;/display-name&gt;"
      flags="i">
    </replaceregexp>
  </target>
  
  <target name="update-tenant-meta-title-in-tenant-settings">
    <replaceregexp
      file="${tenant.settings.file}"
      match="&lt;meta id=&quot;title&quot;&gt;(.*?)${template.tenant.shortname}(.*)&lt;/meta&gt;"
      replace="&lt;meta id=&quot;title&quot;&gt;\1${tenant.shortname}\2&lt;/meta&gt;"
      flags="i">
    </replaceregexp>
  </target>
  
  <target name="update-tenant-shortname-in-tenant-settings">
   <!-- Note: this text replacement is brute-force and will even replace sub-strings,
        if found, so you'll need to ensure that your 'template tenant' shortname is a
        unique string: that it won't be inadvertently contained within text elsewhere. -->
   <!-- TODO: Perform more nuanced replacements to avoid the problem described above. 
        (See the Ant ReplaceRegExp task for one potential approach when doing so.) -->
    <replace file="${tenant.settings.file}" token="${template.tenant.shortname}"
      value="${tenant.shortname}">
    </replace>
  </target>
 
    
</project>